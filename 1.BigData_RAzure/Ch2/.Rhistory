setwd("~/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2")
getwd()
sessionInfo()
setwd("/home/bia/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2")
# Print
print("I'm starting my data scientist career path")
install.packages("caret")
# Install packages
install.packages('randomForest')
install.packages("randomForest")
# Install packages
install.packages('randomForest')
install.packages('ggplot2')
install.packages('dplyr')
install.packages('devtools')
# Load a package
library(ggplot)
# Load a package
library(ggplot2)
# Unload a package
detach(package:ggplot)
# Unload a package
detach(package:ggplot2)
# To see more information about the function in a browser
install.packages('sos')
library(sos)
library(sos)
findFn('fread')
# If I do not know the function name
help.search('randomForest')
??matplot
RSiteSearch('matplot')
example('matplot')
# exit RStudio
q()
# Configuring work diretory
setwd("/home/bia/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch02")
getwd()
# Sum
7 + 7
# Subtraction
7 - 4
# Multiplication
5 * 5
# Power
3Â²
# Power
3 ^ 2
3**2
# Module
16 %% 3
# Configuring work diretory
setwd("/home/bia/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch02")
getwd()
source("~/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2/02-Operators.R")
source("~/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2/02-Operators.R")
source("~/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2/02-Operators.R")
source("~/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2/02-Operators.R")
q()
setwd("~/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2")
# Configuring work diretory
setwd("/home/bia/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch02")
# Addition
7 + 7
# Subtraction
7 - 4
# Multiplication
5 * 5
# Power
3 ^ 2
# Module
16 %% 3
# Assigning variables
x = 7
# Assigning variables
x = 7
x = 5
# Operators
x > 8
x < 8
x <= 8
x >=8
x == 8
x != 8
# And, or
(x == 8) & (x == 6)
(x == 8) | (x <= 6)
# Not
x > 8
print(!x > 8)
q()
q()
# Configuring directory
getwd()
# Configuring directory
setwd("/home/bia/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2")
getwd()
# Creating variables
var1 = 100
var1
mode(var1)
help("mode")
sqrt(var1)
# We can atribute the value from a variable to another one
var2 = var1
var2
mode(var2)
typeof(var2)
help("typeof")
help("mode")
var3
# One variable can be a list of elements
var3 = c("first", "second", "third")
var3
mode(var3)
# One variable can be a function
var4 = function(x) {x+3}
var4
mode(var4)
# We can change a type
var5 = as.character(var1)
var5
mode(var5)
# Atribute values to objects
x <- c(1,2,3)
x
c(1,2,3) -> y
y
assign("x", c(6.3,4,-2))
x
# Attribute values to objects
x1 = c(1,2,3)
x1
# Attribute values to objects
x = c(1,2,3)
x
x1 <- c(1,2,3)
x1
c(1,2,3) -> y
y
assign("x", c(6.3,4,-2))
x
# Verify the value in a specific position
x[1]
# Verify objects
ls()
objects()
# Remove objects
rm(x)
x
q()
q()
# Set word directory
getwd()
# Set word directory
setwd("/home/bia/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2")
getwd()
# Numeric - All the numbers created in R are numeric mode
# They are stored as decimal numbers (double)
num1 <- 7
num1
class(num1)
mode(num1)
typeof(num1)
num2 = 16.82
num2
num2
mode(num2)
typeof(num2)
# INTEGER
# Verify if is integer
is.integer(num2)
# Convert numeric type to integer
y = as.integer(num2)
class(y)
mode(y)
typeof(y)
y
y
as.integer('3.17')
as.integer("Joe")
as.integer('Joe')
as.integer(TRUE)
# INTEGER
# Verify if is integer
is.integer(num2)
# Convert numeric type to integer
y = as.integer(num2)
num2 = 16.82
num2
mode(num2)
typeof(num2)
# INTEGER
# Verify if is integer
is.integer(num2)
# Convert numeric type to integer
y = as.integer(num2)
class(y)
mode(y)
typeof(y)
y
as.integer('3.17')
as.integer("Joe") #
as.integer('Joe')
as.integer("FALSE")
as.integer('3.67')
char1
# CHARACTER
char1 = 'A'
char1
mode(char1)
typeof(char1)
char2
mode(char2)
char2 = "scientist"
char2
mode(char2)
typeof(char2)
char3
mode(char3)
char3 = c("Data", "Science", "Academy")
char3
mode(char3)
typeof(char3)
# Complex
comp1 = 2.5 + 4i
comp1
# Complex
compl = 2.5 + 4i
compl
mode(compl)
typeof(compl)
sqrt(-1)
sqrt(-1+0i)
sqrt(as.complex(-1))
# Logic
x = 1; y =2
z = x > y
z
class(z)
class(u)
u = TRUE; v = FALSE
class(u)
u & v
u | v
!u
# OPERATIONS WITH 0
5/0
0/5
# ERROR
'Joe'/5
q()
setwd("~/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2")
getwd()
setwd("/home/bia/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2")
getwd()
# Vector - Has only one dimension and 1 data type
vector1 <- c(1:20)
vector1
length(vector1)
mode(vector1)
class(vector1)
class(vector1)
typeof(vector1)
matrix1
# MATRIZ - Has 2 dimensions and 1 data type
matriz1 <- matrix(1:20, nrow = 2)
matrix1
# MATRIZ - Has 2 dimensions and 1 data type
matrix1 <- matrix(1:20, nrow = 2)
matrix1
length(matrix1)
mode(matrix1)
class(matrix1)
typeof(matrix1)
# ARRAY - It has 2 or more dimensions and 1 type of data
array1 <- array(1:5, dim = c(3,3,3))
array1
length(array1)
mode(length())
mode(array1)
class(array1)
typeof(array1)
# Data Frames: Data of different types
view(iris)
# Data Frames: Data of different types
View(iris)
length(iris)
mode(iris)
class(iris)
typeof(iris)
list1
# LISTS: Collection of different objects
# Different data types are possible
list1 <- list(a = matriz1, b = vector1)
list1
# LISTS: Collection of different objects
# Different data types are possible
list1 <- list(a = matrix1, b = vector1)
list1
# LISTS: Collection of different objects
# Different data types are possible
list1 <- list(a = matrix1, b = vector1)
# MATRIZ - It has 2 dimensions and 1 data type
matrix1 <- matrix(1:20, nrow = 2)
# VECTOR: It has only one dimension and 1 data type
vector1 <- c(1:20)
vector1
length(vector1)
mode(vector1)
class(vector1)
class(vector1)
typeof(vector1)
# MATRIZ - It has 2 dimensions and 1 data type
matrix1 <- matrix(1:20, nrow = 2)
matrix1
length(matrix1)
mode(matrix1)
class(matrix1)
typeof(matrix1)
# ARRAY: It has 2 or more dimensions and 1 type of data
array1 <- array(1:5, dim = c(3,3,3))
array1
length(array1)
mode(array1)
class(array1)
typeof(array1)
# DATA FRAMES: Data of different types
View(iris) # Iris is a data frame that came with R to test
length(iris)
mode(iris)
class(iris)
typeof(iris)
# LISTS: Collection of different objects
# Different data types are possible
list1 <- list(a = matrix1, b = vector1)
list1
length(list1)
mode(list1)
class(list1)
typeof(list1)
return(var1)
# FUNCTIONS - they are also objects in R
func1 <- function(x) {
var1 <- x * x
return(var1)
}
func1(5)
class(func1)
# REMOVE OBJECTS
objects()
rm(array1, func1())
rm(array1, func1)
objects()
q()
getwd()
setwd("/home/bia/Code/GITHUB_DSA/DSA_Data-Science-Course/3.BigData_RAzure/Ch2")
getwd()
# String Vector
vector_character = c("Data", "Science", "Academy")
vector_character
# Float vector
vector_numeric - c(1.90, 45.3, 300.5)
# Float vector
vector_numeric = c(1.90, 45.3, 300.5)
vector_numeric
# Complex value vector
vector_complex = c(5.2+3i, 3.8+4i)
vector_complex
vector_logic
# Logic value vector
vector_logic = c(TRUE, FALSE, TRUE, FALSE, FALSE)
vector_logic
# Integer vector
vector_integer = c(2, 4, 6)
ve
vector_integer
# We can create a vector using seq()
vector1 = seq(1:10)
vector1
is.vector(vector1)
# We can create a vector using rep()
vector2 = rep(1:5)
vector2
is.vector(vector2)
# Vector indexing
a <- c(1,2,3,4,5)
a
a[1]
1[6]
b <- c("Data", "Science", "Academy")
b
b[1]
b[2]
b[3]
b[4]
# Combining vectors
v1 = c(2, 3, 5)
v2 = c("aa", "bb", "cc", "dd", "ee")
c(v1, v2)
y = c(2, 4, 6, 8)
# Operations with vectors
x = c(1, 3, 5, 7)
x * 5
x + y
x - y
x * y
x / y
# Adding vectors with different number of elements
alfa = c(10, 20, 30)
beta = c(1, 2, 3, 4, 5, 6, 7, 8, 9)
alfa + beta
# Adding vectors with different number of elements
alfa = c(10, 20, 30)
beta = c(1, 2, 3, 4, 5, 6, 7, 8)
alfa + beta
# Named vector
v = c("Nelson", "Mandela")
v
# Named vector
v = c("Nelson", "Mandela")
v
names(v) = c("Nome", "Sobrenome")
v
names(v) = c("Name", "Surname")
v
v["Name"]
q()
